# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - develop

pool:
  vmImage: ubuntu-latest

variables:
  - group: Build-Variable-Group
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.workspace)/.m2/repository
  - name: MAVEN_OPTS
    value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:
- task: DownloadSecureFile@1
  name: 'mulesoftSettingsFile'
  inputs:
    secureFile: 'settings.xml'
    retryCount: '5'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      New-Item -Type Directory -Force "${HOME}/.m2"
      Copy-Item -Force "$(mulesoftSettingsFile.secureFilePath)" "${HOME}/.m2/settings.xml"

- task: Maven@4
  displayName: Build and Deploy
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: true
    sonarQubeRunAnalysis: false
    goals: 'clean package install deploy $(MAVEN_OPTS) -DmuleDeploy -Danypoint.username=$(anypoint.username) -Danypoint.password=$(anypoint.password) -Denvironment=$(environment) -Dapp.runtime=$(app.runtime) -DbusinessGroupId=$(businessGroupId)'